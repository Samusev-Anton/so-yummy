{"version":3,"file":"static/js/201.963581aa.chunk.js","mappings":"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","sources":["components/CategoryList/CategoryList.js","components/CategoryRecipes/CategoryRecipes.js","pages/CategoriesPage.js","redux/selectors.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { useParams } from 'react-router-dom';\n\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Box from '@mui/material/Box';\n\nimport { getCategories } from 'redux/selectors';\nimport { getCategoriesOperation } from 'redux/opertions';\n\nexport const CategoryList = () => {\n    const { categoryName } = useParams();\n    const dispatcher = useDispatch();\n    const [value, setValue] = useState(0);\n    const [mapArray, setMapArray] = useState([]);\n    const navigate = useNavigate();\n    const [flag, setFlag] = useState(false);\n    const fullCategoryList = useSelector(getCategories);\n\n    useEffect(() => {\n        dispatcher(getCategoriesOperation());\n    }, [dispatcher]);\n\n    useEffect(() => {\n        if (fullCategoryList.length === 0) return;\n\n        setMapArray([...fullCategoryList]);\n\n        const idx = fullCategoryList.findIndex(e => {\n            return e.toLowerCase() === categoryName?.toLowerCase();\n        });\n\n        if (idx !== -1) {\n            setValue(idx);\n        }\n    }, [fullCategoryList, categoryName]);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n        navigate(`/categories/${event.target.textContent}`);\n    };\n\n    const items = mapArray.map((e, index) => (\n        <Tab\n            label={e.toLowerCase()}\n            key={index}\n            sx={{\n                padding: '0',\n                paddingBottom: '28px',\n                color: '#BDBDBD',\n                '&.Mui-selected': {\n                    color: '#8BAA36',\n                },\n            }}\n        />\n    ));\n    const onMouseEnter = () => {\n        setFlag(true);\n    };\n    const onMouseLeave = () => {\n        setFlag(false);\n    };\n\n    return (\n        <Box\n            sx={{ maxWidth: '100%', bgcolor: 'transparent', borderBottom: 1, borderColor: '#E0E0E0',}}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n        >\n            <Tabs\n                onChange={handleChange}\n                value={value}\n                variant=\"scrollable\"\n                scrollButtons={true}\n                aria-label=\"scrollable auto tabs example\"\n                sx={{\n                    '& .MuiTabs-scroller': {\n                        '& .css-1aquho2-MuiTabs-indicator': { backgroundColor: '#8BAA36' },\n                        '& .css-ttwr4n': { backgroundColor: '#8BAA36' },\n                        overflowX: 'auto',\n                        scrollbarWidth: 'none',\n                        '&::-webkit-scrollbar': {\n                            display: 'none',\n                        },\n\n                    },\n                    '& .MuiTabs-flexContainer': {\n                        gap: '55px',\n                        '& :hover': {\n                            color: '#8BAA36',\n                        },\n                    },\n\n                    '& .MuiTab-root': {\n                        textTransform: 'capitalize',\n                        minWidth: 'unset',\n                        fontSize: '18px',\n                        fontWeight: '400',\n                        lineHeight: '18px',\n                        borderColor: '#8BAA36',\n\n                    },\n\n                    '& svg': {\n                        opacity: `${flag ? 1 : 0}`,\n                        stroke: '#8BAA36',\n                        strokeWidth: '3px',\n                        transition: 'all 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n                    },\n                }}\n            >\n                {items}\n            </Tabs>\n        </Box>\n    );\n};\n","import { CardMeal } from 'components/CardMeal/CardMeal';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { getCategoriesOperation, getRecipesByCategoryOperation } from 'redux/opertions';\nimport { getCategories, getRecipesOfCategory, isLoadingRecipesOfCategory } from 'redux/selectors';\nimport { RowTable } from './CategoryRecipes.styled';\n\nexport const CategoryRecipes = () => {\n    const dispatch = useDispatch();\n    const { categoryName } = useParams();\n    const categories = useSelector(getCategories);\n    const recipes = useSelector(getRecipesOfCategory);\n    const isLoading = useSelector(isLoadingRecipesOfCategory);\n\n    useEffect(() => {\n        dispatch(getCategoriesOperation());\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (categoryName) {\n            dispatch(getRecipesByCategoryOperation(categoryName));\n        } else if (categories?.length) {\n            dispatch(getRecipesByCategoryOperation(categories[0]));\n        }\n    }, [dispatch, categoryName, categories]);\n\n    return isLoading ? (\n        <Loader />\n    ) : (\n        <RowTable>\n            {recipes.slice(0, 8).map(meal => (\n                <CardMeal meal={meal} key={meal._id} />\n            ))}\n        </RowTable>\n    );\n};\n","import { CategoryList } from 'components/CategoryList/CategoryList';\nimport { CategoryRecipes } from 'components/CategoryRecipes/CategoryRecipes';\nimport { MainPageTitle } from 'components/MainPageTitle/MainPageTitle/MainPageTitle';\nimport { Container } from '../components/GlobalStyles';\n\nconst CategoriesPage = () => {\n  return (\n    <Container>\n      <MainPageTitle value=\"Categories\"></MainPageTitle>\n      <CategoryList />\n      <CategoryRecipes />\n    </Container>\n  );\n};\n\nexport default CategoriesPage;\n","\nexport const getCategories = state => state.recipes.categories;\n\nexport const getRecipesOfCategory = state => state.recipes.recipesOfCategory;\n\nexport const isLoadingRecipesOfCategory = state => state.recipes.loadingRecipesOfCategory;\n\nexport const getContentForMain = state => state.recipes.mainCategories;\n\nexport const isLoadingMainPage = state => state.recipes.loadingRecipesMain\n\nexport const getIngredients = state => state.ingredients.ingredients;"],"names":["CategoryList","categoryName","useParams","dispatcher","useDispatch","useState","value","setValue","mapArray","setMapArray","navigate","useNavigate","flag","setFlag","fullCategoryList","useSelector","getCategories","useEffect","getCategoriesOperation","length","idx","findIndex","e","toLowerCase","items","map","index","Tab","label","sx","padding","paddingBottom","color","Box","maxWidth","bgcolor","borderBottom","borderColor","onMouseEnter","onMouseLeave","Tabs","onChange","event","newValue","target","textContent","variant","scrollButtons","backgroundColor","overflowX","scrollbarWidth","display","gap","textTransform","minWidth","fontSize","fontWeight","lineHeight","opacity","stroke","strokeWidth","transition","CategoryRecipes","dispatch","categories","recipes","getRecipesOfCategory","isLoading","isLoadingRecipesOfCategory","getRecipesByCategoryOperation","Loader","slice","meal","CardMeal","_id","MainPageTitle","state","recipesOfCategory","loadingRecipesOfCategory","getContentForMain","mainCategories","isLoadingMainPage","loadingRecipesMain"],"sourceRoot":""}