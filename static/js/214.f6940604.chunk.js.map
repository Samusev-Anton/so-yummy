{"version":3,"file":"static/js/214.f6940604.chunk.js","mappings":"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","sources":["components/Pagination/Pagination.js","components/Pagination/Pagination.styled.js","components/SearchInput/Search.styled.js","redux/search/searchSelector.js","components/Search/SearchForm/SearchForm.styled.js","components/Search/SearchForm/SearchForm.js","components/Search/SearchTypeSelector/SearchTypeSelector.styled.js","components/Search/SearchTypeSelector/stylesSearchSelect.js","components/Search/SearchTypeSelector/SearchTypeSelector.js","components/Search/SearchBar/SearchBar.styled.js","components/Search/SearchBar/SearchBar.js","components/Search/NeedSearching/NeedSearching.styled.js","components/Search/NeedSearching/NeedSearching.js","components/Search/SearchedRecipesList/SearchedRecipesList.js","pages/SearchPage.js"],"sourcesContent":["import React from 'react';\nimport { PaginationContainer, PageButton, ArrowButton } from './Pagination.styled';\n\nexport const Pagination = ({ currentPage, setCurrentPage, totalPages }) => {\n    const handleClick = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    };\n\n    const renderPageButtons = () => {\n        const pageButtons = [];\n    \n    if (totalPages <= 10) {\n        for (let i = 1; i <= totalPages; i++) {\n            pageButtons.push(\n                <PageButton\n                    key={i}\n                    onClick={() => handleClick(i)}\n                    className={i === currentPage ? 'active' : ''}\n                >\n                {i}\n                </PageButton>\n            );\n        }\n        } else {\n            const firstPages = [];\n            const lastPages = [];\n            let startPage, endPage;\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage >= totalPages - 5) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 4;\n                endPage = currentPage + 5;\n            }\n    \n        for (let i = startPage; i <= endPage; i++) {\n            const pageButton = (\n                <PageButton\n                    key={i}\n                    onClick={() => handleClick(i)}\n                    className={i === currentPage ? 'active' : ''}\n                >\n                {i}\n                </PageButton>\n            );\n            if (i <= 5) {\n                firstPages.push(pageButton);\n                } else if (i >= totalPages - 4) {\n                    lastPages.push(pageButton);\n                } else {\n                    pageButtons.push(pageButton);\n                }\n            }\n    \n            if (startPage > 6) {\n                pageButtons.unshift(\n                    <PageButton key=\"ellipsis1\" disabled>\n                    ...\n                    </PageButton>\n                );\n                pageButtons.unshift(\n                    <PageButton key={1} onClick={() => handleClick(1)}>\n                    {1}\n                    </PageButton>\n                );\n            }\n            if (endPage < totalPages - 5) {\n                pageButtons.push(\n                    <PageButton key=\"ellipsis2\" disabled>\n                    ...\n                    </PageButton>\n                );\n                pageButtons.push(\n                    <PageButton\n                        key={totalPages}\n                        onClick={() => handleClick(totalPages)}\n                    >\n                    {totalPages}\n                    </PageButton>\n                );\n            }\n            pageButtons.unshift(...firstPages);\n            pageButtons.push(...lastPages);\n        }\n    \n        return pageButtons;\n    };\n\n    return (\n        <PaginationContainer>\n            <ArrowButton\n                onClick={() => handleClick(currentPage - 1)}\n                disabled={currentPage === 1}\n            >\n            {'<'}\n            </ArrowButton>\n            {renderPageButtons()}\n            <ArrowButton\n                onClick={() => handleClick(currentPage + 1)}\n                disabled={currentPage === totalPages}\n            >\n            {'>'}\n            </ArrowButton>\n        </PaginationContainer>\n    );\n}\n\n","import styled from 'styled-components';\nimport { device } from '../GlobalStyles';\n\nexport const PaginationWrapper = styled.div`\ndisplay: flex; \njustify-content: center;\nmargin-bottom: 150px;\n    @media ${device.tablet} {\n        position: absolute; \n        left:50%;\n        transform:translate(-50%, -275%);\n    }\n    @media ${device.desktop} {\n        position: absolute; \n        left:50%;\n        transform:translate(-50%, -275%);\n    }\n`;\n\nexport const PaginationContainer = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    min-width: 275px;\n    padding-top: 12px;\n    padding: 12px 20px;\n    background-color: transparent;\n    border-radius: 26px;\n    box-shadow: 0px 4px 4px 0px rgba(135, 135, 135, 0.2);\n    @media ${device.tablet} {\n        min-width: 324px;\n        padding: 14px 20px;\n    }\n`;\n\nexport const PageButton = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 27px;\n    width: 27px;\n    border-radius: 50%;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n\n    font-family: Poppins;\n    font-size: 12px;\n    font-weight: 500;\n    line-height: 18px;\n    letter-spacing: 0em;\n    text-align: center;\n    color: #656565;\n    margin: 0 9px;\n    @media ${device.tablet} {\n        margin: 0 12px;\n    }\n    \n    &:disabled {\n    cursor: not-allowed;\n    opacity: 0;\n}\n    &:hover:not(:disabled) {\n    background-color: #EBF3D4;\n    color: #22252A;\n}\n    &.active {\n    color: white;\n    background-color: #EBF3D4;\n    color: #22252A;\n}\n    &:first-child {\n        margin-right: 24px;\n        @media ${device.tablet} {\n            margin-right: 40px;\n        }\n}\n    &:last-child {\n        margin-right: 24px;\n        @media ${device.tablet} {\n        margin-right: 40px;\n    }\n} \n`;\n\nexport const ArrowButton = styled.button`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    background-color: transparent;\n    color: rgba(169, 169, 169, 0.73);\n    height: 15px; \n    width: 8px;\n    opacity: 0.73;\n    &:disabled {\n        opacity: 0;\n        cursor: default;\n    }\n`;\n","import styled from \"styled-components\";\nimport { Form, Field } from \"formik\";\nimport { device } from 'components/GlobalStyles';\n\nexport const FormWrap = styled(Form)`\n  width: 295px;\n  position: relative;\n  align-item: center;\n  justify-content: center;\n  flex-wrap: nowrap;\n  display: flex;\n  margin: 0 auto;\n  @media ${device.tablet} {\n    width: 362px;\n    display:block;\n    margin: 0;\n  }\n  @media ${device.desktop} {\n    width: 510px;\n  }\n`;\n\nexport const BtnSearch = styled.button`\n  &:hover {\n    background-color: #22252a;\n    color: #fafafa;\n  }\n  color: rgb(255, 255, 255);\n  border: none;\n  font-family: 'Poppins';\n  background-color: #8baa36;\n  border-radius: 24px 44px;\n  position: absolute;\n  right: 0;\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  height: 53px;\n  width: 113px;\n  @media ${device.tablet} {\n    height: 57px;\n    width: 161px;\n  }\n  @media ${device.desktop} {\n    height: 70px;\n  }\n`;\n\nexport const Input = styled(Field)`\nborder: 1px solid #f0f0f0;\noutline: none;\nborder-radius: 24px 44px;\nfont-family: 'Poppins';\nfont-style: normal;\nfont-weight: 400;\nfont-size: 16px;\nline-height: 1.5;\nbackground: ${({ theme }) => theme.colors.bodyBg};\npadding: 0 0 0 32px;\nheight: 53px;\nwidth: 263px;\ncolor: ${({ theme }) => theme.colors.secondaryDark};\n&:focus::placeholder {\n    opacity: 0;\n    animation: blink-caret 1s step-end infinite;\n  }\n@media ${device.tablet} {\n  height: 57px;\n  width: 324px;\n  padding: 0 0 0 38px;\n  font-size: 14px;\n}\n@media ${device.desktop} {\n  height: 70px;\n  width: 462px;\n  padding: 0 0 0 48px;\n  font-size: 16px;\n}\n`;\n","export const getSearch = state => state.search.search;","import styled from \"styled-components\";\nimport { device } from '../../GlobalStyles';\n\nexport const SearchPageBtn = styled.button`\n    &:hover {\n        border: 2px solid #8BAA36;\n        background-color:  #fafafa;\n        color: #8baa36;\n    }\n    color: #fafafa;\n    border: none;\n    font-family: 'Poppins';\n    background-color: #8baa36;\n    border-radius: 24px 44px;\n    position: absolute;\n    right: 0;\n    font-style: normal;\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 1.5;\n    height: 53px;\n    width: 113px;\n        @media ${device.tablet} {\n            height: 57px;\n            width: 161px;\n        }\n\n        @media ${device.desktop} {\n            height: 70px;\n    }\n`;\n\n","import React from \"react\";\nimport { Formik, ErrorMessage } from 'formik';\nimport { FormWrap, Input } from '../../SearchInput/Search.styled';\nimport { SearchPageBtn } from \"./SearchForm.styled\";\n\nconst validateSearchQuery = (value) => {\n  let error;\n  if (!/^[a-zA-Z]+$/.test(value)) {\n  error = 'Please enter only letters';\n  }\n  return error;\n  };\n\nexport const SearchForm = ({ searchQuery, onSearchQueryChange }) => {\n\n  return (\n    <Formik initialValues={{ searchQuery: '' }}>\n      {({ errors, touched }) => (\n        <FormWrap>\n          <label htmlFor=\"search-query\"></label>\n            <Input\n              required\n              id=\"search-query\"\n              type=\"text\"\n              placeholder=\"|\"\n              value={searchQuery}\n              onChange={(e) => onSearchQueryChange(e.target.value)}\n              validate={validateSearchQuery}\n              autoComplete=\"on\"\n              autoFocus\n            />\n          {errors.searchQuery && touched.searchQuery && \n            <ErrorMessage>{errors.searchQuery}</ErrorMessage>}\n            <SearchPageBtn type=\"submit\">Search</SearchPageBtn>\n        </FormWrap>\n      )}\n    </Formik>\n  );\n}\n\n","import styled from \"styled-components\";\nimport { device } from 'components/GlobalStyles';\n\nexport const  SearchSelectorWrap = styled.div`\n    margin: 0 auto;\n    text-align: center;\n    gap: 0.93rem;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    margin-top: 1.5rem;\n    @media ${device.tablet} {\n        gap: 1.125rem;\n        margin-top: 1.75rem;\n    }\n    @media ${device.desktop} {\n        margin-top: 1.82rem;\n    }\n`;\n\nexport const SearchSelectorLabel = styled.label`\n    font-family: 'Poppins';\n    font-weight: 400;\n    font-size: 12px;\n    line-height: 1.3;\n    letter-spacing: -0.24px;\n    color: ${p => p.theme.colors.searchSelectText};\n        @media ${device.tablet} {\n    font-weight: 500;\n    font-size: 14px;\n    }\n    @media ${device.desktop} {\n    font-size: 18px;\n    }\n`;\n","export const stylesSearchSelect = theme => {\n    return {\n    control: (baseStyles, state) => ({\n        ...baseStyles,\n        backgroundColor: 'transparent',\n        border: theme === 'light' ? '#D9D9D9' : '1px solid #FAFAFA33', \n        borderRadius: '6px',\n        boxShadow: state.isFocused && '0 0 0 1px transparent',\n        fontFamily: 'inherit',\n        fontStyle: 'inherit',\n        fontWeight: '400',\n        fontSize: '12px',\n        lineHeight: '1.3',\n        letterSpacing: '-0.024px',\n        textAlign: 'left',\n        width: '146px',\n        height: '34px',\n        '@media (min-width: 768px)': {\n            fontWeight: '500',\n            fontSize: '14px',\n            width: '175px',\n            height: '41px'},\n        '@media (min-width: 1280px)': {\n            fontSize: '18px',\n            width: '198px',\n            height: '49px',\n        },\n    }),\n    menuList: (baseStyles, state) => ({\n        ...baseStyles,\n        fontFamily: 'inherit',\n        fontStyle: 'inherit',\n        fontWeight: '400',\n        fontSize: '12px',\n        lineHeight: '1.5',\n        textAlign: 'left',\n        letterSpacing: '-0.02em',\n        maxHeight: '200px',\n        borderRadius: '6px',\n        backgroundColor: theme === 'light' ? ' #ECECEC' : '#8BAA36',\n        color: theme === 'light' ? '#FAFAFA' : '#8BAA36',\n        '@media (min-width: 768px)': {\n            fontSize: '14px',\n        },\n        '@media (min-width: 1280px)': {\n            fontSize: '18px',\n        },\n    }),\n    option: (baseStyles, state) => ({\n        ...baseStyles,\n        color: '#000000',\n        backgroundColor: theme === 'light' ? '#FAFAFA' : '#8BAA36', \n    }),\n    dropdownIndicator: baseStyles => ({\n        ...baseStyles,\n        color: '#8BAA36',\n        opacity: 1,\n    }),\n    indicatorSeparator: baseStyles => ({\n        ...baseStyles,\n        opacity: 0,\n    }),\n    menu: baseStyles => ({\n        ...baseStyles,\n        margin: 0,\n    }),\n    };\n};\n\n\n","import React from \"react\";\nimport { SearchSelectorWrap, SearchSelectorLabel } from \"../SearchTypeSelector/SearchTypeSelector.styled\"\nimport Select from 'react-select';\nimport { store } from '../../../redux/store';\nimport { stylesSearchSelect } from '../SearchTypeSelector/stylesSearchSelect';\n\nconst options = [\n  { value: 'query', label: 'Title' },\n  { value: 'ingredient', label: 'Ingredients' },\n] \n\nconst theme = store.theme;\n\nexport const SearchTypeSelector = ({ searchType, onSearchTypeChange }) => {\n  const defaultOption = options.find(option => option.value === searchType);\n\n  return (\n    <SearchSelectorWrap localTheme={theme}>\n      <SearchSelectorLabel htmlFor=\"search-type\">Search by:</SearchSelectorLabel>\n          <Select\n            id=\"search-type\"\n            defaultValue={defaultOption} \n            onChange={(selectedOption) => onSearchTypeChange(selectedOption.value)} \n            styles={stylesSearchSelect(theme)}\n            options={options}\n          />\n    </SearchSelectorWrap>\n  );\n}\n\n\n\n","import styled from \"styled-components\";\nimport { device } from '../../GlobalStyles';\n\nexport const SearchBarWrap = styled.div`\n    width: 295px;\n    position: relative;\n    align-item: center;\n    justify-content: center;\n    flex-wrap: nowrap;\n    display: block;\n    margin: 0 auto;\n    @media ${device.tablet}  {\n        width: 362px;\n    }\n    @media ${device.desktop} {\n        width: 510px;\n    }\n`;","import React from \"react\";\nimport { SearchForm } from \"../SearchForm/SearchForm\";\nimport { SearchTypeSelector } from \"../SearchTypeSelector/SearchTypeSelector\";\nimport { SearchBarWrap } from \"../SearchBar/SearchBar.styled\";\n\nexport const SearchBar = ({\n    searchQuery,\n    searchType,\n    onSearchQueryChange,\n    onSearchTypeChange,\n}) => {\n    return (\n        <>\n            <SearchBarWrap>\n                <SearchForm\n                    searchQuery={searchQuery}\n                    onSearchQueryChange={onSearchQueryChange}\n                />\n                <SearchTypeSelector\n                    searchType={searchType}\n                    onSearchTypeChange={onSearchTypeChange}\n                />\n            </SearchBarWrap>\n        </>\n    );\n}\n\n\n","import styled from \"styled-components\";\nimport needSearchingImgMobile from '../../../images/search/need_searching_img_mobile_1x.png';\nimport needSearchingImgMobileRetina from '../../../images/search/need_searching_img_mobile_2x.png';\nimport needSearchingImgTablet from '../../../images/search/need_searching_img_tablet_1x.png';\nimport needSearchingImgTabletRetina from '../../../images/search/need_searching_img_tablet_2x.png'\nimport needSearchingImgDecktop from '../../../images/search/need_searching_img_decktop_1x.png';\nimport needSearchingImgDecktopRetina from '../../../images/search/need_searching_img_tablet_2x.png';\nimport { device } from '../../GlobalStyles';\n\nexport const NeedSearchingWrap = styled.div`\n    text-align: center;\n    margin-top: 3.125rem;\n    `\nexport const NeedSearchingImg = styled.div`\n    background-image: url(${needSearchingImgMobile});\n    background-repeat: no-repeat;\n    background-size: cover;\n    display: inline-block;\n    width: 208px;\n    height: 133px;\n    margin-bottom: 24px;\n        @media ${device.mobile},\n            (min-resolution: 192dpi),\n            (min-resolution: 2dppx) {\n            background-image: url(${needSearchingImgMobileRetina});\n        }\n        @media ${device.tablet} {\n            background-image: url(${needSearchingImgTablet});\n            width: 350px;\n            height: 225px;\n            margin-bottom: 32px;\n        @media ${device.tablet},\n            (min-resolution: 192dpi),\n            (min-resolution: 2dppx) {\n            background-image: url(${ needSearchingImgTabletRetina});\n        }\n        }\n        @media ${device.desktop} {\n            background-image: url(${needSearchingImgDecktop});\n        @media ${device.desktop},\n            (min-resolution: 192dpi),\n            (min-resolution: 2dppx) {\n            background-image: url(${needSearchingImgDecktopRetina});\n        }\n        }\n    `;\n    \n    export const NeedSearchingText = styled.p`\n        font-family: 'Poppins';\n        font-style: normal;\n        font-weight: 500;\n        font-size: 14px;\n        color: #000000;\n        opacity: 0.5;\n        margin-bottom: 100px;\n            @media ${device.tablet}  {\n                font-size: 24px;\n                margin-bottom: 200px;\n        }\n    `;","import {\n    NeedSearchingWrap,\n    NeedSearchingImg,\n    NeedSearchingText,\n} from '../NeedSearching/NeedSearching.styled';\n\nexport const NeedSearching = () => {\n    return (\n    <>\n        <NeedSearchingWrap>\n            <NeedSearchingImg></NeedSearchingImg>\n            <NeedSearchingText>Try looking for something else...</NeedSearchingText>\n        </NeedSearchingWrap>\n    </>       \n    );\n}\n","import React, { useState } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { RowTable } from '../../CategoryRecipes/CategoryRecipes.styled';\nimport { CardMeal } from '../../CardMeal/CardMeal';\nimport { NeedSearching } from '../NeedSearching/NeedSearching';\nimport { Pagination } from '../../Pagination/Pagination';\nimport { PaginationWrapper } from '../../Pagination/Pagination.styled';\n\nexport const SearchedRecipesList = ({ recipes }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const isDesktop = useMediaQuery({ minWidth: 1280 });\n\n  let itemsPerPage;\n  if (isDesktop) {\n    itemsPerPage = 12;\n  } else {\n    itemsPerPage = 6;\n  }\n\n  const getPaginatedData = () => {\n    const startIndex = (currentPage - 1) * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n\n    return recipes.slice(startIndex, endIndex);\n  };\n\n  const totalPages = Math.ceil(recipes.length / itemsPerPage);\n\n  return (\n    <div>\n      {recipes.length > 0 ? (\n        <>\n          <RowTable>\n            {getPaginatedData().slice(0, 100).map((recipe) => (\n              <CardMeal meal={recipe} key={recipe._id} />\n            ))}\n            \n          </RowTable>\n          < PaginationWrapper>\n          <Pagination\n            currentPage={currentPage}\n            setCurrentPage={setCurrentPage}\n            totalPages={totalPages}\n          />\n          </PaginationWrapper>\n          </>\n      ) : (\n        <NeedSearching />\n      )}\n    </div>\n  )\n}\n\n\n","import React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { searchRecipesApi } from '../services/API/Recipes';\nimport { getSearch } from '../redux/search/searchSelector';\nimport { MainPageTitle } from 'components/MainPageTitle/MainPageTitle/MainPageTitle';\nimport { SearchBar } from 'components/Search/SearchBar/SearchBar';\nimport { SearchedRecipesList } from 'components/Search/SearchedRecipesList/SearchedRecipesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { throttle } from 'lodash';\nimport { Container } from 'components/GlobalStyles';\n\nconst SearchPage = () => {\n  const search = useSelector(getSearch);\n  const { query } = useParams('');\n  const [searchQuery, setSearchQuery] = useState(query || search);\n  const [searchType, setSearchType] = useState('query');\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const setSearchQueryThrottled = throttle(setSearchQuery, 3000);\n\n  useEffect(() => {\n    if (searchQuery === '') return;\n    setIsLoading(true);\n    searchRecipesApi({ searchQuery, searchType })\n      .then(data => setRecipes(data))\n      .finally(() => setIsLoading(false));\n  }, [searchQuery, searchType]);\n\n  const handleSearchQueryChange = query => {\n    setSearchQueryThrottled(query);\n  };\n\n  const handleSearchTypeChange = type => {\n    setSearchType(type);\n  };\n\n  return (\n    <Container>\n      <MainPageTitle value={`Search`}></MainPageTitle>\n      <SearchBar\n        searchQuery={searchQuery}\n        searchType={searchType}\n        onSearchQueryChange={handleSearchQueryChange}\n        onSearchTypeChange={handleSearchTypeChange}\n      />\n      {isLoading ? <Loader /> : <SearchedRecipesList recipes={recipes} />}\n    </Container>\n  );\n};\n\nexport default SearchPage;\n"],"names":["Pagination","currentPage","setCurrentPage","totalPages","handleClick","pageNumber","onClick","disabled","pageButtons","i","push","className","startPage","endPage","firstPages","lastPages","pageButton","unshift","renderPageButtons","PaginationWrapper","styled","device","PaginationContainer","PageButton","ArrowButton","FormWrap","Form","BtnSearch","Input","Field","theme","colors","bodyBg","secondaryDark","getSearch","state","search","SearchPageBtn","validateSearchQuery","value","error","test","SearchForm","searchQuery","onSearchQueryChange","initialValues","errors","touched","htmlFor","required","id","type","placeholder","onChange","e","target","validate","autoComplete","autoFocus","SearchSelectorWrap","SearchSelectorLabel","p","searchSelectText","stylesSearchSelect","control","baseStyles","backgroundColor","border","borderRadius","boxShadow","isFocused","fontFamily","fontStyle","fontWeight","fontSize","lineHeight","letterSpacing","textAlign","width","height","menuList","maxHeight","color","option","dropdownIndicator","opacity","indicatorSeparator","menu","margin","options","label","store","SearchTypeSelector","searchType","onSearchTypeChange","defaultOption","find","localTheme","defaultValue","selectedOption","styles","SearchBarWrap","SearchBar","NeedSearchingWrap","NeedSearchingImg","needSearchingImgMobile","needSearchingImgMobileRetina","needSearchingImgTablet","needSearchingImgTabletRetina","needSearchingImgDecktop","needSearchingImgDecktopRetina","NeedSearchingText","NeedSearching","SearchedRecipesList","itemsPerPage","recipes","useState","isDesktop","useMediaQuery","minWidth","Math","ceil","length","startIndex","endIndex","slice","getPaginatedData","map","recipe","CardMeal","meal","_id","useSelector","query","useParams","setSearchQuery","setSearchType","setRecipes","isLoading","setIsLoading","setSearchQueryThrottled","throttle","useEffect","searchRecipesApi","then","data","finally","MainPageTitle","Loader"],"sourceRoot":""}